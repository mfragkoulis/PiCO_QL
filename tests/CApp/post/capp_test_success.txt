Query 0:
 select nCurrency, name, price_mode, price, weight_mode from MonetarySystem JOIN Money ON Money.base = MonetarySystem.currency;

Statement prepared.
nCurrency name price_mode price weight_mode 

3 Euro 1 Euro_price 3 
3 Pound 1 pnd_price 3 
3 Dollar 1 dlr_price 3 

Done

Query 1:
 select name, price_mode, price, weight_mode from Moneylist;

Statement prepared.
name price_mode price weight_mode 

Euro 1 Euro_price 3 
Pound 1 pnd_price 3 
Dollar 1 dlr_price 3 

Done

Query 2:
 select name, price_mode, price, weight_mode from MoneyArray;

Statement prepared.
name price_mode price weight_mode 

Euro 1 Euro_price 3 
Pound 1 pnd_price 3 
Dollar 1 dlr_price 3 

Done

Query 3:
 select nCurrency, name, price_mode, price, weight_mode from MonetarySystem JOIN Money ON Money.base = MonetarySystem.currency where name like '%eu';

Statement prepared.
nCurrency name price_mode price weight_mode 


Done

Query 4:
 select name, price_mode, price, weight_mode from Moneylist where name like '%eu';

Statement prepared.
name price_mode price weight_mode 


Done

Query 5:
 select name, price_mode, price, weight_mode from MoneyArray where name like '%eu';

Statement prepared.
name price_mode price weight_mode 


Done

Query 6:
 select nCurrency, name, price_mode, price, weight_mode from MonetarySystem JOIN Money ON Money.base = MonetarySystem.currency where price > 10;

Statement prepared.
nCurrency name price_mode price weight_mode 

3 Euro 1 Euro_price 3 
3 Pound 1 pnd_price 3 
3 Dollar 1 dlr_price 3 

Done

Query 7:
 select name, price_mode, price, weight_mode from Moneylist where price > 10;

Statement prepared.
name price_mode price weight_mode 

Euro 1 Euro_price 3 
Pound 1 pnd_price 3 
Dollar 1 dlr_price 3 

Done

Query 8:
 select name, price_mode, price, weight_mode from MoneyArray where price > 10;

Statement prepared.
name price_mode price weight_mode 

Euro 1 Euro_price 3 
Pound 1 pnd_price 3 
Dollar 1 dlr_price 3 

Done

Query 9:
 select nCurrency, name, price_mode, price, weight_mode from MonetarySystem JOIN Money ON Money.base = MonetarySystem.currency where price like 'f%';

Statement prepared.
nCurrency name price_mode price weight_mode 


Done

Query 10:
 select name, price_mode, price, weight_mode from Moneylist where price like 'f%';

Statement prepared.
name price_mode price weight_mode 


Done

Query 11:
 select name, price_mode, price, weight_mode from MoneyArray where price like 'f%';

Statement prepared.
name price_mode price weight_mode 


Done

Query 12:
 select nCurrency, name, price_mode, price, weight_mode from MonetarySystem JOIN Money ON Money.base = MonetarySystem.currency where price like 'd%';

Statement prepared.
nCurrency name price_mode price weight_mode 

3 Dollar 1 dlr_price 3 

Done

Query 13:
 select name, price_mode, price, weight_mode from Moneylist where price like 'd%';

Statement prepared.
name price_mode price weight_mode 

Dollar 1 dlr_price 3 

Done

Query 14:
 select name, price_mode, price, weight_mode from MoneyArray where price like 'd%';

Statement prepared.
name price_mode price weight_mode 

Dollar 1 dlr_price 3 

Done

Query 15:
 select name, price_mode, price, weight_mode from (select DISTINCT name, price_mode, price, weight_mode, weight from Moneylist where price like '%pr%') m join GoldEquivalent on GoldEquivalent.base = m.weight where ounce > 10;

Statement prepared.
name price_mode price weight_mode 

Dollar 1 dlr_price 3 
Euro 1 Euro_price 3 
Pound 1 pnd_price 3 

Done

Query 16:
 select name, price_mode, price, weight_mode from (select DISTINCT name, price_mode, price, weight_mode, weight from MoneyArray where price like '%pr%') m join GoldEquivalent on GoldEquivalent.base = m.weight where ounce > 10;

Statement prepared.
name price_mode price weight_mode 

Dollar 1 dlr_price 3 
Euro 1 Euro_price 3 
Pound 1 pnd_price 3 

Done

Query 17:
 select nCurrency, name, price_mode, price, weight_mode from MonetarySystem JOIN Money ON Money.base = MonetarySystem.currency join GoldEquivalent on GoldEquivalent.base = Money.weight where ounce > 10;

Statement prepared.
nCurrency name price_mode price weight_mode 

3 Euro 1 Euro_price 3 
3 Pound 1 pnd_price 3 
3 Dollar 1 dlr_price 3 

Done

Query 18:
 select name, price_mode, price, weight_mode from Moneylist join GoldEquivalent on GoldEquivalent.base = Moneylist.weight where ounce > 10;

Statement prepared.
name price_mode price weight_mode 

Euro 1 Euro_price 3 
Pound 1 pnd_price 3 
Dollar 1 dlr_price 3 

Done

Query 19:
 select name, price_mode, price, weight_mode from MoneyArray join GoldEquivalent on GoldEquivalent.base = MoneyArray.weight where ounce > 10;

Statement prepared.
name price_mode price weight_mode 

Euro 1 Euro_price 3 
Pound 1 pnd_price 3 
Dollar 1 dlr_price 3 

Done

Query 20:
 select nCurrency, name, price_mode, price, weight_mode from MonetarySystem JOIN Money ON Money.base = MonetarySystem.currency where weight like 'a%';

Statement prepared.
nCurrency name price_mode price weight_mode 


Done

Query 21:
 select name, price_mode, price, weight_mode from Moneylist where weight like 'a%';

Statement prepared.
name price_mode price weight_mode 


Done

Query 22:
 select name, price_mode, price, weight_mode from MoneyArray where weight like 'a%';

Statement prepared.
name price_mode price weight_mode 


Done

Query 23:
 select nCurrency, name, price_mode, price, weight_mode from MonetarySystem JOIN Money ON Money.base = MonetarySystem.currency where weight like '%o%';

Statement prepared.
nCurrency name price_mode price weight_mode 


Done

Query 24:
 select name, price_mode, price, weight_mode from Moneylist where weight like '%o%';

Statement prepared.
name price_mode price weight_mode 


Done

Query 25:
 select name, price_mode, price, weight_mode from MoneyArray where weight like '%o%';

Statement prepared.
name price_mode price weight_mode 


Done

Query 26:
 select * from Price;

Statement prepared.
union_mode price 

0 12.500000 

Done

Query 27:
 select * from Price where price > 10;

Statement prepared.
union_mode price 

0 12.500000 

Done

Query 28:
 select number from Number;

Statement prepared.
number 

1 
2 
3 
4 
5 
6 
7 
8 

Done

Query 29:
 select number from Number where number > 5;

Statement prepared.
number 

6 
7 
8 

Done

Query 30:
 select number from Number where number > 8;

Statement prepared.
number 


Done

Query 31:
 select number from ENumber;

Statement prepared.
number 

1 
2 
3 
4 
5 
6 
7 
8 

Done

Query 32:
 select number from ENumber where number > 5;

Statement prepared.
number 

6 
7 
8 

Done

Query 33:
 select number from ENumber where number > 8;

Statement prepared.
number 


Done

